// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

model User {
  id       BigInt   @id @default(autoincrement())
  email    String   @unique
  password String
  palmais  Palmal[]
}

model Palmal {
  id           BigInt   @id @default(autoincrement())
  variedade    String
  area         Int
  tradicional  Boolean
  dataCadastro DateTime @db.Date
  lastUpdate   DateTime @db.Date

  User   User   @relation(fields: [userId], references: [id])
  userId BigInt

  reboleiras Reboleira[]

}

model Reboleira {
  id               BigInt    @id @default(autoincrement())
  iteracao         String    @db.Char
  dataCadastro     DateTime  @db.Date
  proximaAvaliacao DateTime? @db.Date
  deleted          DateTime? @db.Date
  avaliado         Boolean
  lastUpdate       DateTime  @db.Date

  Palmal   Palmal @relation(fields: [palmalId], references: [id])
  palmalId BigInt

  estacaoes Estacao[]

}

model Estacao {
  id                BigInt    @id @default(autoincrement())
  status            String
  dataCadastro      DateTime  @db.Date
  proximaAvaliacao  DateTime  @db.Date
  deleted           DateTime? @db.Date
  isObservationOpen Boolean
  lastUpdate        DateTime  @db.Date


  Reboleira   Reboleira @relation(fields: [reboleiraId], references: [id])
  reboleiraId BigInt

  raquetes Raquete[]
}

model Raquete {
  id                      BigInt    @id @default(autoincrement())
  posicao                 String
  dataDacastro            DateTime  @db.Date
  aparencia               String
  agenteControleBiologico Boolean
  agenteControleQuimico   Boolean
  avaliado                Boolean
  corte                   DateTime? @db.Date
  dataObservacao          DateTime? @db.Date
  exported                Boolean
  nextVersion             BigInt

  Estacao   Estacao @relation(fields: [estacaoId], references: [id])
  estacaoId BigInt
}
